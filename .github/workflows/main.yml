name: Main

on:
  push:
    branches:
      - master

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_PASSWORD }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      - name: Push Docker image
        run: |
          docker tag myapp:latest ${{ env.DOCKERHUB_USERNAME }}/myapp:latest
          docker push ${{ env.DOCKERHUB_USERNAME }}/myapp:latest

  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy to dev env
        run: |
          # Add your deployment script here

      - name: Slack notification on failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        with:
          status: "Deployment to dev env failed"
          text: "There was a failure during deployment to the dev environment."

  staging-approval:
    needs: deploy-dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        with:
          status: "Staging Deployment Approval"
          text: "A deployment to the staging environment requires approval. Please review and respond."

      - name: Wait for approval
        id: wait-for-approval
        run: |
          payload=$(curl -s -X GET \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/approvals")
          echo "$payload" > output.json
          approvals=$(jq -r '.total_count' output.json)
          if [ "$approvals" -gt "0" ]; then
            echo "Workflow approved!"
            exit 0
          else
            echo "Waiting for approval..."
            exit 1
          fi

  # deploy-to-staging:
  #   needs: staging-approval
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Deploy to staging env
  #       run: |
  #         # Add your staging deployment script here
